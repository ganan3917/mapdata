name: auto-release

# 触发条件：支持手动触发 + 推送代码到 main 分支触发（可按需修改）
on:
  workflow_dispatch:  # 手动触发（推荐，避免频繁打包）
    inputs:
      releaseVersion:  # 手动触发时需输入 Release 版本号（如 v1.0.0）
        description: 'Release 版本号（格式：vX.Y.Z，如 v1.0.0）'
        required: true
        default: 'v1.0.0'
      releaseTitle:    # 手动触发时输入 Release 标题
        description: 'Release 标题'
        required: true
        default: '仓库内容分卷打包'
      releaseNotes:    # 手动触发时输入 Release 备注
        description: 'Release 备注（可选）'
        required: false
        default: '仓库内容按 1.5G 分卷打包的 ZIP 文件'

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
      ########################################################################
      # 步骤 1：检出仓库代码
      ########################################################################
      - name: 检出仓库代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 检出完整历史（若仓库含大文件/子模块，需保留此配置）

      ########################################################################
      # 步骤 2：安装 zip 工具（Ubuntu 默认已安装，此步骤为兼容保险）
      ########################################################################
      - name: 安装 zip 工具
        run: sudo apt-get update && sudo apt-get install -y zip

      ########################################################################
      # 步骤 3：按 1.5G 分卷打包仓库内容
      ########################################################################
      - name: 1.5G 分卷打包为 ZIP
        run: |
          # 定义打包参数：分卷大小 1.5G（单位支持 k/m/g，需小写）
          VOLUME_SIZE="1500m"
          # 打包文件名（分卷会自动添加 .001/.002 后缀）
          ZIP_NAME="repo-content.zip"
          # 排除不需要打包的文件（如 .git 目录、actions 配置目录等，按需修改）
          EXCLUDE_FILES="--exclude=*.git* --exclude=.github/workflows/* --exclude=*.zip*"
          
          # 执行分卷打包命令（将当前目录所有文件打包，排除指定文件）
          zip -r -s $VOLUME_SIZE $ZIP_NAME . $EXCLUDE_FILES
          
          # 查看打包结果（可选，用于日志调试）
          echo "打包完成，文件列表："
          ls -lh $ZIP_NAME*

      ########################################################################
      # 步骤 4：创建 GitHub Release
      ########################################################################
      - name: 创建 GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BUILD.DATA }} 
        with:
          tag_name: ${{ github.event.inputs.releaseVersion }}
          release_name: ${{ github.event.inputs.releaseTitle }}
          body: ${{ github.event.inputs.releaseNotes }}
          draft: false
          prerelease: false

      ########################################################################
      # 步骤 5：上传所有分卷文件到 Release
      ########################################################################
      - name: 上传分卷文件到 Release
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BUILD.DATA }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./repo-content.zip.*
          asset_name: ${{ github.event.repository.name }}-{{ asset_path_basename }}
          asset_content_type: application/zip
